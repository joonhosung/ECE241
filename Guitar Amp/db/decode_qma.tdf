--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=13 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 18.0 cbx_cycloneii 2018:04:24:18:04:18:SJ cbx_lpm_add_sub 2018:04:24:18:04:18:SJ cbx_lpm_compare 2018:04:24:18:04:18:SJ cbx_lpm_decode 2018:04:24:18:04:18:SJ cbx_mgl 2018:04:24:18:08:49:SJ cbx_nadder 2018:04:24:18:04:18:SJ cbx_stratix 2018:04:24:18:04:18:SJ cbx_stratixii 2018:04:24:18:04:18:SJ  VERSION_END


-- Copyright (C) 2018  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_qma
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[12..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[12..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1958w[1..0]	: WIRE;
	w_anode1967w[3..0]	: WIRE;
	w_anode1984w[3..0]	: WIRE;
	w_anode1994w[3..0]	: WIRE;
	w_anode2004w[3..0]	: WIRE;
	w_anode2014w[3..0]	: WIRE;
	w_anode2024w[3..0]	: WIRE;
	w_anode2034w[3..0]	: WIRE;
	w_anode2044w[3..0]	: WIRE;
	w_anode2056w[1..0]	: WIRE;
	w_anode2063w[3..0]	: WIRE;
	w_anode2074w[3..0]	: WIRE;
	w_anode2084w[3..0]	: WIRE;
	w_anode2094w[3..0]	: WIRE;
	w_anode2104w[3..0]	: WIRE;
	w_anode2114w[3..0]	: WIRE;
	w_anode2124w[3..0]	: WIRE;
	w_anode2134w[3..0]	: WIRE;
	w_data1956w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[12..0] = eq_wire[12..0];
	eq_wire[] = ( ( w_anode2134w[3..3], w_anode2124w[3..3], w_anode2114w[3..3], w_anode2104w[3..3], w_anode2094w[3..3], w_anode2084w[3..3], w_anode2074w[3..3], w_anode2063w[3..3]), ( w_anode2044w[3..3], w_anode2034w[3..3], w_anode2024w[3..3], w_anode2014w[3..3], w_anode2004w[3..3], w_anode1994w[3..3], w_anode1984w[3..3], w_anode1967w[3..3]));
	w_anode1958w[] = ( (w_anode1958w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1967w[] = ( (w_anode1967w[2..2] & (! w_data1956w[2..2])), (w_anode1967w[1..1] & (! w_data1956w[1..1])), (w_anode1967w[0..0] & (! w_data1956w[0..0])), w_anode1958w[1..1]);
	w_anode1984w[] = ( (w_anode1984w[2..2] & (! w_data1956w[2..2])), (w_anode1984w[1..1] & (! w_data1956w[1..1])), (w_anode1984w[0..0] & w_data1956w[0..0]), w_anode1958w[1..1]);
	w_anode1994w[] = ( (w_anode1994w[2..2] & (! w_data1956w[2..2])), (w_anode1994w[1..1] & w_data1956w[1..1]), (w_anode1994w[0..0] & (! w_data1956w[0..0])), w_anode1958w[1..1]);
	w_anode2004w[] = ( (w_anode2004w[2..2] & (! w_data1956w[2..2])), (w_anode2004w[1..1] & w_data1956w[1..1]), (w_anode2004w[0..0] & w_data1956w[0..0]), w_anode1958w[1..1]);
	w_anode2014w[] = ( (w_anode2014w[2..2] & w_data1956w[2..2]), (w_anode2014w[1..1] & (! w_data1956w[1..1])), (w_anode2014w[0..0] & (! w_data1956w[0..0])), w_anode1958w[1..1]);
	w_anode2024w[] = ( (w_anode2024w[2..2] & w_data1956w[2..2]), (w_anode2024w[1..1] & (! w_data1956w[1..1])), (w_anode2024w[0..0] & w_data1956w[0..0]), w_anode1958w[1..1]);
	w_anode2034w[] = ( (w_anode2034w[2..2] & w_data1956w[2..2]), (w_anode2034w[1..1] & w_data1956w[1..1]), (w_anode2034w[0..0] & (! w_data1956w[0..0])), w_anode1958w[1..1]);
	w_anode2044w[] = ( (w_anode2044w[2..2] & w_data1956w[2..2]), (w_anode2044w[1..1] & w_data1956w[1..1]), (w_anode2044w[0..0] & w_data1956w[0..0]), w_anode1958w[1..1]);
	w_anode2056w[] = ( (w_anode2056w[0..0] & data_wire[3..3]), enable_wire);
	w_anode2063w[] = ( (w_anode2063w[2..2] & (! w_data1956w[2..2])), (w_anode2063w[1..1] & (! w_data1956w[1..1])), (w_anode2063w[0..0] & (! w_data1956w[0..0])), w_anode2056w[1..1]);
	w_anode2074w[] = ( (w_anode2074w[2..2] & (! w_data1956w[2..2])), (w_anode2074w[1..1] & (! w_data1956w[1..1])), (w_anode2074w[0..0] & w_data1956w[0..0]), w_anode2056w[1..1]);
	w_anode2084w[] = ( (w_anode2084w[2..2] & (! w_data1956w[2..2])), (w_anode2084w[1..1] & w_data1956w[1..1]), (w_anode2084w[0..0] & (! w_data1956w[0..0])), w_anode2056w[1..1]);
	w_anode2094w[] = ( (w_anode2094w[2..2] & (! w_data1956w[2..2])), (w_anode2094w[1..1] & w_data1956w[1..1]), (w_anode2094w[0..0] & w_data1956w[0..0]), w_anode2056w[1..1]);
	w_anode2104w[] = ( (w_anode2104w[2..2] & w_data1956w[2..2]), (w_anode2104w[1..1] & (! w_data1956w[1..1])), (w_anode2104w[0..0] & (! w_data1956w[0..0])), w_anode2056w[1..1]);
	w_anode2114w[] = ( (w_anode2114w[2..2] & w_data1956w[2..2]), (w_anode2114w[1..1] & (! w_data1956w[1..1])), (w_anode2114w[0..0] & w_data1956w[0..0]), w_anode2056w[1..1]);
	w_anode2124w[] = ( (w_anode2124w[2..2] & w_data1956w[2..2]), (w_anode2124w[1..1] & w_data1956w[1..1]), (w_anode2124w[0..0] & (! w_data1956w[0..0])), w_anode2056w[1..1]);
	w_anode2134w[] = ( (w_anode2134w[2..2] & w_data1956w[2..2]), (w_anode2134w[1..1] & w_data1956w[1..1]), (w_anode2134w[0..0] & w_data1956w[0..0]), w_anode2056w[1..1]);
	w_data1956w[2..0] = data_wire[2..0];
END;
--VALID FILE
